{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/classPrivateFieldLooseKey\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { registerEventHandler, unregisterEventHandler } from \"./core.js\";\nimport { shouldBeUseWeb } from \"./PlatformChecker.js\";\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_objectSpread(_objectSpread({}, evt.nativeEvent), {}, {\n      eventName: eventName\n    }));\n  };\n}\nvar _viewTags = _classPrivateFieldLooseKey(\"viewTags\");\nvar _registrations = _classPrivateFieldLooseKey(\"registrations\");\nvar WorkletEventHandlerNative = function () {\n  function WorkletEventHandlerNative(worklet, eventNames) {\n    _classCallCheck(this, WorkletEventHandlerNative);\n    Object.defineProperty(this, _viewTags, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _registrations, {\n      writable: true,\n      value: void 0\n    });\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    _classPrivateFieldLooseBase(this, _viewTags)[_viewTags] = new Set();\n    _classPrivateFieldLooseBase(this, _registrations)[_registrations] = new Map();\n  }\n  return _createClass(WorkletEventHandlerNative, [{\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      var _this = this;\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      _classPrivateFieldLooseBase(this, _registrations)[_registrations].forEach(function (registrationIDs) {\n        registrationIDs.forEach(function (id) {\n          return unregisterEventHandler(id);\n        });\n      });\n      Array.from(_classPrivateFieldLooseBase(this, _viewTags)[_viewTags]).forEach(function (tag) {\n        var newRegistrations = _this.eventNames.map(function (eventName) {\n          return registerEventHandler(_this.worklet, eventName, tag);\n        });\n        _classPrivateFieldLooseBase(_this, _registrations)[_registrations].set(tag, newRegistrations);\n      });\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag, fallbackEventName) {\n      var _this2 = this;\n      _classPrivateFieldLooseBase(this, _viewTags)[_viewTags].add(viewTag);\n      var newRegistrations = this.eventNames.map(function (eventName) {\n        return registerEventHandler(_this2.worklet, eventName, viewTag);\n      });\n      _classPrivateFieldLooseBase(this, _registrations)[_registrations].set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        var newRegistration = registerEventHandler(this.worklet, fallbackEventName, viewTag);\n        _classPrivateFieldLooseBase(this, _registrations)[_registrations].set(viewTag, [newRegistration]);\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(viewTag) {\n      var _classPrivateFieldLoo;\n      _classPrivateFieldLooseBase(this, _viewTags)[_viewTags].delete(viewTag);\n      (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _registrations)[_registrations].get(viewTag)) == null ? void 0 : _classPrivateFieldLoo.forEach(function (id) {\n        unregisterEventHandler(id);\n      });\n      _classPrivateFieldLooseBase(this, _registrations)[_registrations].delete(viewTag);\n    }\n  }]);\n}();\nvar WorkletEventHandlerWeb = function () {\n  function WorkletEventHandlerWeb(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, WorkletEventHandlerWeb);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n  return _createClass(WorkletEventHandlerWeb, [{\n    key: \"setupWebListeners\",\n    value: function setupWebListeners() {\n      var _this3 = this;\n      this.listeners = {};\n      this.eventNames.forEach(function (eventName) {\n        _this3.listeners[eventName] = jsListener(eventName, _this3.worklet);\n      });\n    }\n  }, {\n    key: \"updateEventHandler\",\n    value: function updateEventHandler(newWorklet, newEvents) {\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(_viewTag, _fallbackEventName) {}\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents(_viewTag) {}\n  }]);\n}();\nexport var WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;","map":{"version":3,"names":["_classCallCheck","_createClass","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","registerEventHandler","unregisterEventHandler","shouldBeUseWeb","SHOULD_BE_USE_WEB","jsListener","eventName","handler","evt","nativeEvent","_viewTags","_registrations","WorkletEventHandlerNative","worklet","eventNames","writable","value","Set","Map","key","updateEventHandler","newWorklet","newEvents","_this","registrationIDs","id","Array","from","tag","newRegistrations","map","set","registerForEvents","viewTag","fallbackEventName","_this2","add","newRegistration","unregisterFromEvents","_classPrivateFieldLoo","delete","get","WorkletEventHandlerWeb","undefined","listeners","setupWebListeners","_this3","_viewTag","_fallbackEventName","WorkletEventHandler"],"sources":["C:\\Proyek PAWM\\g-lingua-mobile\\node_modules\\react-native-reanimated\\src\\WorkletEventHandler.ts"],"sourcesContent":["'use strict';\nimport type { NativeSyntheticEvent } from 'react-native';\nimport { registerEventHandler, unregisterEventHandler } from './core';\nimport type {\n  EventPayload,\n  ReanimatedEvent,\n  IWorkletEventHandler,\n} from './hook/commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ntype JSEvent<Event extends object> = NativeSyntheticEvent<EventPayload<Event>>;\n\n// In JS implementation (e.g. for web) we don't use Reanimated's\n// event emitter, therefore we have to handle here\n// the event that came from React Native and convert it.\nfunction jsListener<Event extends object>(\n  eventName: string,\n  handler: (event: ReanimatedEvent<Event>) => void\n) {\n  return (evt: JSEvent<Event>) => {\n    handler({ ...evt.nativeEvent, eventName } as ReanimatedEvent<Event>);\n  };\n}\n\nclass WorkletEventHandlerNative<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  worklet: (event: ReanimatedEvent<Event>) => void;\n  #viewTags: Set<number>;\n  #registrations: Map<number, number[]>; // keys are viewTags, values are arrays of registration ID's for each viewTag\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[]\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.#viewTags = new Set<number>();\n    this.#registrations = new Map<number, number[]>();\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n\n    // Detach all events\n    this.#registrations.forEach((registrationIDs) => {\n      registrationIDs.forEach((id) => unregisterEventHandler(id));\n      // No need to remove registrationIDs from map, since it gets overwritten when attaching\n    });\n\n    // Attach new events with new worklet\n    Array.from(this.#viewTags).forEach((tag) => {\n      const newRegistrations = this.eventNames.map((eventName) =>\n        registerEventHandler(this.worklet, eventName, tag)\n      );\n      this.#registrations.set(tag, newRegistrations);\n    });\n  }\n\n  registerForEvents(viewTag: number, fallbackEventName?: string): void {\n    this.#viewTags.add(viewTag);\n\n    const newRegistrations = this.eventNames.map((eventName) =>\n      registerEventHandler(this.worklet, eventName, viewTag)\n    );\n    this.#registrations.set(viewTag, newRegistrations);\n\n    if (this.eventNames.length === 0 && fallbackEventName) {\n      const newRegistration = registerEventHandler(\n        this.worklet,\n        fallbackEventName,\n        viewTag\n      );\n      this.#registrations.set(viewTag, [newRegistration]);\n    }\n  }\n\n  unregisterFromEvents(viewTag: number): void {\n    this.#viewTags.delete(viewTag);\n    this.#registrations.get(viewTag)?.forEach((id) => {\n      unregisterEventHandler(id);\n    });\n    this.#registrations.delete(viewTag);\n  }\n}\n\nclass WorkletEventHandlerWeb<Event extends object>\n  implements IWorkletEventHandler<Event>\n{\n  eventNames: string[];\n  listeners:\n    | Record<string, (event: ReanimatedEvent<ReanimatedEvent<Event>>) => void>\n    | Record<string, (event: JSEvent<Event>) => void>;\n\n  worklet: (event: ReanimatedEvent<Event>) => void;\n\n  constructor(\n    worklet: (event: ReanimatedEvent<Event>) => void,\n    eventNames: string[] = []\n  ) {\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.listeners = {};\n    this.setupWebListeners();\n  }\n\n  setupWebListeners() {\n    this.listeners = {};\n    this.eventNames.forEach((eventName) => {\n      this.listeners[eventName] = jsListener(eventName, this.worklet);\n    });\n  }\n\n  updateEventHandler(\n    newWorklet: (event: ReanimatedEvent<Event>) => void,\n    newEvents: string[]\n  ): void {\n    // Update worklet and event names\n    this.worklet = newWorklet;\n    this.eventNames = newEvents;\n    this.setupWebListeners();\n  }\n\n  registerForEvents(_viewTag: number, _fallbackEventName?: string): void {\n    // noop\n  }\n\n  unregisterFromEvents(_viewTag: number): void {\n    // noop\n  }\n}\n\nexport const WorkletEventHandler = SHOULD_BE_USE_WEB\n  ? WorkletEventHandlerWeb\n  : WorkletEventHandlerNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}