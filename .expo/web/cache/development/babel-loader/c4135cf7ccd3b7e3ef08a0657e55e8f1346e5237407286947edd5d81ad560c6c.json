{"ast":null,"code":"'use strict';\n\nimport { useEvent } from \"./useEvent.js\";\nimport { useHandler } from \"./useHandler.js\";\nimport { WorkletEventHandler } from \"../WorkletEventHandler.js\";\nexport function useComposedEventHandler(handlers) {\n  var workletsRecord = {};\n  var composedEventNames = new Set();\n  var workletsMap = {};\n  handlers.filter(function (h) {\n    return h !== null;\n  }).forEach(function (handler) {\n    var workletEventHandler = handler.workletEventHandler;\n    if (workletEventHandler instanceof WorkletEventHandler) {\n      workletEventHandler.eventNames.forEach(function (eventName) {\n        composedEventNames.add(eventName);\n        if (workletsMap[eventName]) {\n          workletsMap[eventName].push(workletEventHandler.worklet);\n        } else {\n          workletsMap[eventName] = [workletEventHandler.worklet];\n        }\n        var handlerName = eventName + `${workletsMap[eventName].length}`;\n        workletsRecord[handlerName] = workletEventHandler.worklet;\n      });\n    }\n  });\n  var _useHandler = useHandler(workletsRecord),\n    doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n  return useEvent(function (event) {\n    'worklet';\n\n    if (workletsMap[event.eventName]) {\n      workletsMap[event.eventName].forEach(function (worklet) {\n        return worklet(event);\n      });\n    }\n  }, Array.from(composedEventNames), doDependenciesDiffer);\n}","map":{"version":3,"names":["useEvent","useHandler","WorkletEventHandler","useComposedEventHandler","handlers","workletsRecord","composedEventNames","Set","workletsMap","filter","h","forEach","handler","workletEventHandler","eventNames","eventName","add","push","worklet","handlerName","length","_useHandler","doDependenciesDiffer","event","Array","from"],"sources":["C:\\Proyek PAWM\\g-lingua-mobile\\node_modules\\react-native-reanimated\\src\\hook\\useComposedEventHandler.ts"],"sourcesContent":["'use strict';\nimport { useEvent } from './useEvent';\nimport { useHandler } from './useHandler';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport type { ReanimatedEvent } from './commonTypes';\nimport type { WorkletFunction } from '../commonTypes';\nimport type { EventHandlerProcessed, EventHandlerInternal } from './useEvent';\n\ntype ComposedHandlerProcessed<\n  Event extends object,\n  Context extends Record<string, unknown> = Record<string, unknown>,\n> = EventHandlerProcessed<Event, Context>;\n\ntype ComposedHandlerInternal<Event extends object> =\n  EventHandlerInternal<Event>;\n\n/**\n * Lets you compose multiple event handlers based on\n * [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n * hook.\n *\n * @param handlers - An array of event handlers created using\n *   [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n *   hook.\n * @returns An object you need to pass to a coresponding \"onEvent\" prop on an\n *   `Animated` component (for example handlers responsible for `onScroll` event\n *   go to `onScroll` prop).\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useComposedEventHandler\n */\n// @ts-expect-error This overload is required by our API.\nexport function useComposedEventHandler<\n  Event extends object,\n  Context extends Record<string, unknown>,\n>(\n  handlers: (EventHandlerProcessed<Event, Context> | null)[]\n): ComposedHandlerProcessed<Event, Context>;\n\nexport function useComposedEventHandler<\n  Event extends object,\n  Context extends Record<string, unknown>,\n>(handlers: (EventHandlerProcessed<Event, Context> | null)[]) {\n  // Record of handlers' worklets to calculate deps diffs. We use the record type to match the useHandler API requirements\n  const workletsRecord: Record<string, WorkletFunction> = {};\n  // Summed event names for registration\n  const composedEventNames = new Set<string>();\n  // Map that holds worklets for specific handled events\n  const workletsMap: {\n    [key: string]: ((event: ReanimatedEvent<Event>) => void)[];\n  } = {};\n\n  handlers\n    .filter((h) => h !== null)\n    .forEach((handler) => {\n      // EventHandlerProcessed is the return type of useEvent and has to be force casted to EventHandlerInternal, because we need WorkletEventHandler object\n      const { workletEventHandler } =\n        handler as unknown as EventHandlerInternal<Context>;\n      if (workletEventHandler instanceof WorkletEventHandler) {\n        workletEventHandler.eventNames.forEach((eventName) => {\n          composedEventNames.add(eventName);\n\n          if (workletsMap[eventName]) {\n            workletsMap[eventName].push(workletEventHandler.worklet);\n          } else {\n            workletsMap[eventName] = [workletEventHandler.worklet];\n          }\n\n          const handlerName = eventName + `${workletsMap[eventName].length}`;\n          workletsRecord[handlerName] =\n            workletEventHandler.worklet as WorkletFunction;\n        });\n      }\n    });\n\n  const { doDependenciesDiffer } = useHandler(workletsRecord);\n\n  return useEvent<Event, Context>(\n    (event) => {\n      'worklet';\n      if (workletsMap[event.eventName]) {\n        workletsMap[event.eventName].forEach((worklet) => worklet(event));\n      }\n    },\n    Array.from(composedEventNames),\n    doDependenciesDiffer\n  ) as unknown as ComposedHandlerInternal<Event>;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ;AACjB,SAASC,UAAU;AACnB,SAASC,mBAAmB;AAkC5B,OAAO,SAASC,uBAAuBA,CAGrCC,QAA0D,EAAE;EAE5D,IAAMC,cAA+C,GAAG,CAAC,CAAC;EAE1D,IAAMC,kBAAkB,GAAG,IAAIC,GAAG,CAAS,CAAC;EAE5C,IAAMC,WAEL,GAAG,CAAC,CAAC;EAENJ,QAAQ,CACLK,MAAM,CAAE,UAAAC,CAAC;IAAA,OAAKA,CAAC,KAAK,IAAI;EAAA,EAAC,CACzBC,OAAO,CAAE,UAAAC,OAAO,EAAK;IAEpB,IAAQC,mBAAA,GACND,OAAmD,CAD7CC,mBAAA;IAER,IAAIA,mBAAmB,YAAYX,mBAAmB,EAAE;MACtDW,mBAAmB,CAACC,UAAU,CAACH,OAAO,CAAE,UAAAI,SAAS,EAAK;QACpDT,kBAAkB,CAACU,GAAG,CAACD,SAAS,CAAC;QAEjC,IAAIP,WAAW,CAACO,SAAS,CAAC,EAAE;UAC1BP,WAAW,CAACO,SAAS,CAAC,CAACE,IAAI,CAACJ,mBAAmB,CAACK,OAAO,CAAC;QAC1D,CAAC,MAAM;UACLV,WAAW,CAACO,SAAS,CAAC,GAAG,CAACF,mBAAmB,CAACK,OAAO,CAAC;QACxD;QAEA,IAAMC,WAAW,GAAGJ,SAAS,GAAG,GAAGP,WAAW,CAACO,SAAS,CAAC,CAACK,MAAM,EAAE;QAClEf,cAAc,CAACc,WAAW,CAAC,GACzBN,mBAAmB,CAACK,OAA0B;MAClD,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEJ,IAAAG,WAAA,GAAiCpB,UAAU,CAACI,cAAc,CAAC;IAAnDiB,oBAAA,GAAAD,WAAA,CAAAC,oBAAA;EAER,OAAOtB,QAAQ,CACZ,UAAAuB,KAAK,EAAK;IACT,SAAS;;IACT,IAAIf,WAAW,CAACe,KAAK,CAACR,SAAS,CAAC,EAAE;MAChCP,WAAW,CAACe,KAAK,CAACR,SAAS,CAAC,CAACJ,OAAO,CAAE,UAAAO,OAAO;QAAA,OAAKA,OAAO,CAACK,KAAK,CAAC;MAAA,EAAC;IACnE;EACF,CAAC,EACDC,KAAK,CAACC,IAAI,CAACnB,kBAAkB,CAAC,EAC9BgB,oBACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}