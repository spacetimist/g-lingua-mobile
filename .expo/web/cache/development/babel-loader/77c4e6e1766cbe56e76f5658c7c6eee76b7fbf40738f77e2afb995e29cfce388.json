{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { withStyleAnimation } from \"../animation/styleAnimation.js\";\nimport { makeMutableUI } from \"../mutables.js\";\nimport { LayoutAnimationType } from \"./animationBuilder/index.js\";\nimport { runOnUIImmediately } from \"../threads.js\";\nvar TAG_OFFSET = 1e9;\nfunction startObservingProgress(tag, sharedValue, animationType) {\n  'worklet';\n\n  var isSharedTransition = animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, function () {\n    global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\nfunction stopObservingProgress(tag, sharedValue) {\n  'worklet';\n\n  var removeView = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  global._notifyAboutEnd(tag, removeView);\n}\nfunction createLayoutAnimationManager() {\n  'worklet';\n\n  var currentAnimationForTag = new Map();\n  var mutableValuesForTag = new Map();\n  return {\n    start: function start(tag, type, yogaValues, config) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n      var style = config(yogaValues);\n      var currentAnimation = style.animations;\n      var previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = _objectSpread(_objectSpread({}, previousAnimation), style.animations);\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n      var value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeMutableUI(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n      var animation = withStyleAnimation(currentAnimation);\n      animation.callback = function (finished) {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          var shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback && style.callback(finished === undefined ? false : finished);\n      };\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop: function stop(tag) {\n      var value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    }\n  };\n}\nrunOnUIImmediately(function () {\n  'worklet';\n\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","withStyleAnimation","makeMutableUI","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","global","_notifyAboutProgress","value","stopObservingProgress","removeView","undefined","removeListener","_notifyAboutEnd","createLayoutAnimationManager","currentAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","SHARED_ELEMENT_TRANSITION_PROGRESS","ProgressTransitionRegister","onTransitionStart","style","currentAnimation","animations","previousAnimation","get","set","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","LayoutAnimationsManager"],"sources":["C:\\Proyek PAWM\\g-lingua-mobile\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationsManager.ts"],"sourcesContent":["'use strict';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeMutableUI } from '../mutables';\nimport { LayoutAnimationType } from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\nimport type {\n  SharedTransitionAnimationsValues,\n  LayoutAnimation,\n  LayoutAnimationStartFunction,\n} from './animationBuilder/commonTypes';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<Record<string, unknown>>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  removeView = false\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  global._notifyAboutEnd(tag, removeView);\n}\n\nfunction createLayoutAnimationManager(): {\n  start: LayoutAnimationStartFunction;\n  stop: (tag: number) => void;\n} {\n  'worklet';\n  const currentAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      /**\n       * CreateLayoutAnimationManager creates an animation manager for both\n       * Layout animations and Shared Transition Elements animations.\n       */\n      yogaValues: Partial<SharedTransitionAnimationsValues>,\n      config: (\n        arg: Partial<SharedTransitionAnimationsValues>\n      ) => LayoutAnimation\n    ) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      // When layout animation is requested, but a previous one is still running, we merge\n      // new layout animation targets into the ongoing animation\n      const previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = { ...previousAnimation, ...style.animations };\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeMutableUI(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method â€“ don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n\nexport type LayoutAnimationsManager = ReturnType<\n  typeof createLayoutAnimationManager\n>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}