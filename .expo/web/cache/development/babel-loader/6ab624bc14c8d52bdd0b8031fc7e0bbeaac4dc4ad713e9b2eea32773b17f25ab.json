{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { addLogBoxLog } from \"./LogBox.js\";\nvar DOCS_URL = 'https://docs.swmansion.com/react-native-reanimated/docs/debugging/logger-configuration';\nvar DOCS_REFERENCE = `If you don't want to see this message, you can disable the \\`strict\\` mode. Refer to:\\n${DOCS_URL} for more details.`;\nexport var LogLevel = function (LogLevel) {\n  LogLevel[LogLevel[\"warn\"] = 1] = \"warn\";\n  LogLevel[LogLevel[\"error\"] = 2] = \"error\";\n  return LogLevel;\n}({});\nfunction logToConsole(data) {\n  'worklet';\n\n  switch (data.level) {\n    case 'warn':\n      console.warn(data.message.content);\n      break;\n    case 'error':\n    case 'fatal':\n    case 'syntax':\n      console.error(data.message.content);\n      break;\n  }\n}\nexport var DEFAULT_LOGGER_CONFIG = {\n  logFunction: logToConsole,\n  level: LogLevel.warn,\n  strict: true\n};\nfunction formatMessage(message) {\n  'worklet';\n\n  return `[Reanimated] ${message}`;\n}\nfunction createLog(level, message) {\n  'worklet';\n\n  var formattedMessage = formatMessage(message);\n  return {\n    level: level,\n    message: {\n      content: formattedMessage,\n      substitutions: []\n    },\n    category: formattedMessage,\n    componentStack: [],\n    componentStackType: null,\n    stack: new Error().stack\n  };\n}\nexport function logToLogBoxAndConsole(data) {\n  addLogBoxLog(data);\n  logToConsole(data);\n}\nexport function registerLoggerConfig(config) {\n  'worklet';\n\n  global.__reanimatedLoggerConfig = config;\n}\nexport function replaceLoggerImplementation(logFunction) {\n  'worklet';\n\n  registerLoggerConfig(_objectSpread(_objectSpread({}, __reanimatedLoggerConfig), {}, {\n    logFunction: logFunction\n  }));\n}\nexport function updateLoggerConfig(options) {\n  'worklet';\n\n  var _options$level, _options$strict;\n  registerLoggerConfig(_objectSpread(_objectSpread({}, __reanimatedLoggerConfig), {}, {\n    level: (_options$level = options == null ? void 0 : options.level) != null ? _options$level : DEFAULT_LOGGER_CONFIG.level,\n    strict: (_options$strict = options == null ? void 0 : options.strict) != null ? _options$strict : DEFAULT_LOGGER_CONFIG.strict\n  }));\n}\nfunction handleLog(level, message, options) {\n  'worklet';\n\n  var config = __reanimatedLoggerConfig;\n  if (options.strict && !config.strict || LogLevel[level] < config.level) {\n    return;\n  }\n  if (options.strict) {\n    message += `\\n\\n${DOCS_REFERENCE}`;\n  }\n  config.logFunction(createLog(level, message));\n}\nexport var logger = {\n  warn: function warn(message) {\n    'worklet';\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    handleLog('warn', message, options);\n  },\n  error: function error(message) {\n    'worklet';\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    handleLog('error', message, options);\n  }\n};","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","addLogBoxLog","DOCS_URL","DOCS_REFERENCE","LogLevel","logToConsole","data","level","console","warn","message","content","error","DEFAULT_LOGGER_CONFIG","logFunction","strict","formatMessage","createLog","formattedMessage","substitutions","category","componentStack","componentStackType","stack","Error","logToLogBoxAndConsole","registerLoggerConfig","config","global","__reanimatedLoggerConfig","replaceLoggerImplementation","updateLoggerConfig","options","_options$level","_options$strict","handleLog","logger","undefined"],"sources":["C:\\Proyek PAWM\\g-lingua-mobile\\node_modules\\react-native-reanimated\\src\\logger\\logger.ts"],"sourcesContent":["'use strict';\nimport { addLogBoxLog } from './LogBox';\nimport type { LogData, LogBoxLogLevel } from './LogBox';\n\nconst DOCS_URL =\n  'https://docs.swmansion.com/react-native-reanimated/docs/debugging/logger-configuration';\nconst DOCS_REFERENCE = `If you don't want to see this message, you can disable the \\`strict\\` mode. Refer to:\\n${DOCS_URL} for more details.`;\n\ntype LogFunction = (data: LogData) => void;\n\nexport enum LogLevel {\n  warn = 1,\n  error = 2,\n}\n\nexport type LoggerConfig = {\n  level?: LogLevel;\n  strict?: boolean;\n};\n\nexport type LoggerConfigInternal = {\n  logFunction: LogFunction;\n} & Required<LoggerConfig>;\n\nfunction logToConsole(data: LogData) {\n  'worklet';\n  switch (data.level) {\n    case 'warn':\n      console.warn(data.message.content);\n      break;\n    case 'error':\n    case 'fatal':\n    case 'syntax':\n      console.error(data.message.content);\n      break;\n  }\n}\n\nexport const DEFAULT_LOGGER_CONFIG: LoggerConfigInternal = {\n  logFunction: logToConsole,\n  level: LogLevel.warn,\n  strict: true,\n};\n\nfunction formatMessage(message: string) {\n  'worklet';\n  return `[Reanimated] ${message}`;\n}\n\nfunction createLog(level: LogBoxLogLevel, message: string): LogData {\n  'worklet';\n  const formattedMessage = formatMessage(message);\n\n  return {\n    level,\n    message: {\n      content: formattedMessage,\n      substitutions: [],\n    },\n    category: formattedMessage,\n    componentStack: [],\n    componentStackType: null,\n    // eslint-disable-next-line reanimated/use-reanimated-error\n    stack: new Error().stack,\n  };\n}\n\n/**\n * Function that logs to LogBox and console. Used to replace the default console\n * logging with logging to LogBox on the UI thread when runOnJS is available.\n *\n * @param data - The details of the log.\n */\nexport function logToLogBoxAndConsole(data: LogData) {\n  addLogBoxLog(data);\n  logToConsole(data);\n}\n\n/**\n * Registers the logger configuration. use it only for Worklet runtimes.\n *\n * @param config - The config to register.\n */\nexport function registerLoggerConfig(config: LoggerConfigInternal) {\n  'worklet';\n  global.__reanimatedLoggerConfig = config;\n}\n\n/**\n * Replaces the default log function with a custom implementation.\n *\n * @param logFunction - The custom log function.\n */\nexport function replaceLoggerImplementation(logFunction: LogFunction) {\n  'worklet';\n  registerLoggerConfig({ ...__reanimatedLoggerConfig, logFunction });\n}\n\n/**\n * Updates logger configuration.\n *\n * @param options - The new logger configuration to apply.\n *\n *   - Level: The minimum log level to display.\n *   - Strict: Whether to log warnings and errors that are not strict. Defaults to\n *       false.\n */\nexport function updateLoggerConfig(options?: Partial<LoggerConfig>) {\n  'worklet';\n  registerLoggerConfig({\n    ...__reanimatedLoggerConfig,\n    // Don't reuse previous level and strict values from the global config\n    level: options?.level ?? DEFAULT_LOGGER_CONFIG.level,\n    strict: options?.strict ?? DEFAULT_LOGGER_CONFIG.strict,\n  });\n}\n\ntype LogOptions = {\n  strict?: boolean;\n};\n\nfunction handleLog(\n  level: Exclude<LogBoxLogLevel, 'syntax' | 'fatal'>,\n  message: string,\n  options: LogOptions\n) {\n  'worklet';\n  const config = __reanimatedLoggerConfig;\n  if (\n    // Don't log if the log is marked as strict-only and the config doesn't\n    // enable strict logging\n    (options.strict && !config.strict) ||\n    // Don't log if the log level is below the minimum configured level\n    LogLevel[level] < config.level\n  ) {\n    return;\n  }\n\n  if (options.strict) {\n    message += `\\n\\n${DOCS_REFERENCE}`;\n  }\n\n  config.logFunction(createLog(level, message));\n}\n\nexport const logger = {\n  warn(message: string, options: LogOptions = {}) {\n    'worklet';\n    handleLog('warn', message, options);\n  },\n  error(message: string, options: LogOptions = {}) {\n    'worklet';\n    handleLog('error', message, options);\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}